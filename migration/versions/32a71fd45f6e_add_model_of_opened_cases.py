"""Add model of opened cases

Revision ID: 32a71fd45f6e
Revises: d53c2f35f5c3
Create Date: 2024-01-26 17:35:58.390335

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "32a71fd45f6e"
down_revision: Union[str, None] = "d53c2f35f5c3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "opened_cases",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("history_id", sa.String(), nullable=False),
        sa.Column("opening_date", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("case_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["cases.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("history_id"),
    )
    op.drop_table("case_openings")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "case_openings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("case_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "opened_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["case_id"], ["cases.case_id"], name="case_openings_case_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.user_id"], name="case_openings_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="case_openings_pkey"),
    )
    op.drop_table("opened_cases")
    # ### end Alembic commands ###
