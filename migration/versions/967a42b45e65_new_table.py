"""new table

Revision ID: 967a42b45e65
Revises: 0702a8d1e945
Create Date: 2024-01-22 11:29:21.031641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "967a42b45e65"
down_revision: Union[str, None] = "0702a8d1e945"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_items",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("user_inventory")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_inventory",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("item_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "acquired_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["item_id"], ["items.item_id"], name="user_inventory_item_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.user_id"], name="user_inventory_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("user_id", "item_id", name="user_inventory_pkey"),
    )
    op.drop_table("users_items")
    # ### end Alembic commands ###
